cmake_minimum_required(VERSION 3.10)

project(LairEngine VERSION 0.0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
# 添加 Unicode 和宽字符支持
add_definitions(-DUNICODE -D_UNICODE)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/build/bin)

# 将源文件和头文件分开分组
set(SOURCE_FILES
    "src/LairEngine.cpp"
    "main.cpp"
    "src/utils/Win32Tools.cpp")

set(HEADER_FILES
    "include/LairEngine.h"
    "include/utils/Win32Tools.h"
    "include/utils/Types.h")

# 将源代码和头文件添加到此项目的可执行文件。
add_executable (LairEngine ${SOURCE_FILES} ${HEADER_FILES})

# 添加管理员权限清单文件（仅 Release 版本需要管理员权限）
# Debug 版本不需要管理员权限，便于调试
option(REQUIRE_ADMIN "Require administrator privileges" OFF)

# 如果是 Release 模式，默认开启管理员权限
if(CMAKE_BUILD_TYPE STREQUAL "Release")
    set(REQUIRE_ADMIN ON)
endif()

if(WIN32 AND REQUIRE_ADMIN)
    message(STATUS "Building with administrator privileges requirement")
    if(MSVC)
        set_target_properties(LairEngine PROPERTIES 
            LINK_FLAGS "/MANIFESTUAC:\"level='requireAdministrator' uiAccess='false'\" /MANIFEST:EMBED")
    elseif(MINGW)
        # MinGW/GCC 使用 .rc 资源文件
        set(MANIFEST_FILE "${CMAKE_SOURCE_DIR}/LairEngine.manifest")
        configure_file(${MANIFEST_FILE} ${CMAKE_BINARY_DIR}/LairEngine.manifest COPYONLY)
        # 只在需要管理员权限时添加 .rc 资源文件
        target_sources(LairEngine PRIVATE "LairEngine.rc")
    endif()
else()
    message(STATUS "Building without administrator privileges requirement (for debugging)")
endif()

# 添加 include 目录到头文件搜索路径
target_include_directories(LairEngine PRIVATE ${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/include/utils)

link_directories(
    ${PROJECT_SOURCE_DIR}/lib
)

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET LairEngine PROPERTY CXX_STANDARD 20)
endif()


